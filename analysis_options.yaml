# Common analysis options for all packages in the Feather monorepo
include: package:very_good_analysis/analysis_options.yaml

analyzer:
  # Enable stricter analysis
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  errors:
    # Treat missing required parameters as a compilation error
    missing_required_param: error
    # Treat missing return types as a compilation error
    missing_return: error
    # Treat dead code as a warning
    dead_code: warning

  # Exclude generated files
  exclude:
    - '**/*.g.dart'
    - '**/*.freezed.dart'
    - '**/*.mocks.dart'
    - '**/*.pbenum.dart'
    - '**/*.pbjson.dart'
    - '**/*.pbserver.dart'

linter:
  rules:
    # Good practices
    - always_declare_return_types
    - always_put_required_named_parameters_first
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - camel_case_types
    - constant_identifier_names
    - empty_constructor_bodies
    - library_names
    - library_prefixes
    - no_duplicate_case_values
    - non_constant_identifier_names
    - prefer_final_fields
    - prefer_final_locals
    - prefer_single_quotes
    - prefer_typing_uninitialized_variables
    - slash_for_doc_comments
    - sort_constructors_first
    - type_annotate_public_apis
    - unnecessary_this
    - use_key_in_widget_constructors
    - use_rethrow_when_possible
    - use_super_parameters
    - valid_regexps
